# serializer version: 1
# name: test_tuples_2
  TypeScriptSchemaConversionResult(typescript_schema_str='interface TupleContainer {\n    "empty_tuples_args_1": [any, any];\n    "empty_tuples_args_2": any[];\n    "arbitrary_length_1": any[];\n    "arbitrary_length_2": any[];\n    "arbitrary_length_3": any[];\n    "arbitrary_length_4": any[];\n    "arbitrary_length_5": any[];\n    "arbitrary_length_6": any[];\n}\n', typescript_type_reference='TupleContainer', errors=["'()' cannot be used as a type annotation.", "'()' cannot be used as a type annotation.", "'()' cannot be used as a type annotation.", "The tuple type 'tuple[...]' is ill-formed. Tuples with an ellipsis can only take the form 'tuple[SomeType, ...]'.", "The tuple type 'tuple[int, int, ...]' is ill-formed. Tuples with an ellipsis can only take the form 'tuple[SomeType, ...]'.", "The tuple type 'tuple[..., int]' is ill-formed because the ellipsis (...) cannot be the first element.", "The tuple type 'tuple[..., ...]' is ill-formed because the ellipsis (...) cannot be the first element.", "The tuple type 'tuple[int, ..., int]' is ill-formed. Tuples with an ellipsis can only take the form 'tuple[SomeType, ...]'.", "The tuple type 'tuple[int, ..., int, ...]' is ill-formed. Tuples with an ellipsis can only take the form 'tuple[SomeType, ...]'."])
# ---
